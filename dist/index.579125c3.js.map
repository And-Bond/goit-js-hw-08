{"mappings":"AACA,MAAM,IAAI,GAAG;IACX,UAAU,EAAE,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC;IACjD,UAAU,EAAE,QAAQ,CAAC,aAAa,CAAC,sCAAsC,CAAC;IAC1E,UAAU,EAAE,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC;IAClD,cAAc,EAAE,QAAQ,CAAC,aAAa,CAAC,oBAAoB,CAAC;IAC5D,SAAS,EAAE,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC;IAC/C,aAAa,EAAE,uBAAuB,CAAC,YAAY,CAAC;CACrD;AACD,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC;AACnE,SAAS,uBAAuB,CAAC,YAAY,EAAC;IAC3C,OAAO,YAAY,CAAC,GAAG,CAAC,CAAC,EAAC,OAAO,CAAA,EAAC,QAAQ,CAAA,EAAC,WAAW,CAAA,EAAC,GAAK;QACzD,OAAO,CAAC,+JAOC,EAAE,OAAO,CAAC,0BACF,EAAE,QAAQ,CAAC,kBACnB,EAAE,WAAW,CAAC,0CAIzB,CAAC,CAAC;KACF,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;CACb;AAED,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,cAAc,CAAC;AAEzD,SAAS,cAAc,CAAC,GAAG,EAAC;IAC1B,IAAG,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EACjD,OAAM;IAER,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC;IACxC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC;IACrC,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,qBAAqB,CAAC;IAClE,YAAY,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM;IACvD,YAAY,CAAC,YAAY,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC;CAC5D;AAED,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,cAAc,CAAC;AACzD,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,cAAc,CAAC;AAElD,SAAS,cAAc,CAAC,GAAG,EAAC;IAC1B,IAAG,GAAG,CAAC,IAAI,KAAK,QAAQ,EACtB,cAAc,EAAE;CAEnB;AAED,SAAS,cAAc,GAAE;IACvB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;CAC5C;AAED,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,OAAO,EAAE,qBAAqB,CAAC;AAEpE,SAAS,qBAAqB,CAAC,GAAG,EAAC;IACjC,IAAG,CAAC,GAAG,CAAC,MAAM,KAAK,IAAI,CAAC,cAAc,EACpC,OAAM;IAER,cAAc,EAAE;CACjB;AACD,MAAM,aAAa,GAAG,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,CAAC;AAClE,aAAa,CAAC,OAAO,CAAC,CAAA,GAAG,GAAI;IAC3B,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAAE,aAAa,EAAE;QAAC,IAAI,EAAE,IAAI;KAAC,CAAC;CAC1D,CAAC;AAGF,SAAS,aAAa,GAAE;IACtB,aAAa,CAAC,OAAO,CAAC,CAAA,GAAG,GAAI;QAC3B,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC;KAC1B,CAAC;CACH","sources":["src/index.js"],"sourcesContent":["\r\nconst refs = {\r\n  galleryBox: document.querySelector('.js-gallery'),\r\n  galleryBtn: document.querySelector('button[data-action=\"close-lightbox\"]'),\r\n  galleryDiv: document.querySelector('.js-lightbox'),\r\n  galleryOverlay: document.querySelector('.lightbox__overlay'),\r\n  createBtn: document.querySelector('.js-create'),\r\n  galleryResult: createGalleryCollection(galleryItems),\r\n}\r\nrefs.galleryBox.insertAdjacentHTML(\"beforeend\", refs.galleryResult)\r\nfunction createGalleryCollection(galleryItems){\r\n   return galleryItems.map(({preview,original,description}) => {\r\n      return `<li class=\"gallery__item\">\r\n      <a\r\n        class=\"gallery__link\"\r\n        href=\"#\"\r\n      >\r\n        <img\r\n          class=\"gallery__image\"\r\n          src=\"${preview}\"\r\n          data-source=\"${original}\"\r\n          alt=\"${description}\"\r\n        />\r\n      </a>\r\n    </li>\r\n    `;\r\n   }).join('')\r\n}\r\n\r\nrefs.galleryBox.addEventListener('click', onGalleryClick)\r\n\r\nfunction onGalleryClick(evt){\r\n  if(!evt.target.classList.contains('gallery__image')){\r\n    return\r\n  }\r\n  refs.galleryDiv.classList.add('is-open')\r\n  evt.target.classList.add('is-active')\r\n  const currentImage = document.querySelector('img.lightbox__image')\r\n  currentImage.dataset.source = evt.target.dataset.source\r\n  currentImage.setAttribute('src', evt.target.dataset.source)\r\n}\r\n\r\nrefs.galleryBtn.addEventListener('click', onGalleryClose)\r\nwindow.addEventListener('keydown', onKeydownClose)\r\n\r\nfunction onKeydownClose(evt){\r\n  if(evt.code === 'Escape'){\r\n    onGalleryClose()\r\n  }\r\n}\r\n\r\nfunction onGalleryClose(){\r\n  refs.galleryDiv.classList.remove('is-open')\r\n}\r\n\r\nrefs.galleryOverlay.addEventListener('click', onGalleryOverlayClick)\r\n\r\nfunction onGalleryOverlayClick(evt){\r\n  if(!evt.target === refs.galleryOverlay){\r\n    return\r\n  }\r\n  onGalleryClose()\r\n}\r\nconst galleryImages = document.querySelectorAll('.gallery__image') \r\ngalleryImages.forEach(img => {\r\n  img.addEventListener('load', onGalleryLoad, {once: true})\r\n})\r\n\r\n\r\nfunction onGalleryLoad(){\r\n  galleryImages.forEach(img => {\r\n    img.classList.add('load')\r\n  })\r\n}\r\n\r\n"],"names":[],"version":3,"file":"index.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}